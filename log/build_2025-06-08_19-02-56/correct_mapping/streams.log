[0.032s] Invoking command in '/home/louwee/correct_ws/build/correct_mapping': CMAKE_PREFIX_PATH=/opt/ros/humble /usr/bin/cmake --build /home/louwee/correct_ws/build/correct_mapping -- -j12 -l12
[0.065s] -- Found ament_cmake: 1.3.11 (/opt/ros/humble/share/ament_cmake/cmake)
[0.313s] -- Found rclcpp: 16.0.11 (/opt/ros/humble/share/rclcpp/cmake)
[0.388s] -- Found rosidl_generator_c: 3.1.6 (/opt/ros/humble/share/rosidl_generator_c/cmake)
[0.394s] -- Found rosidl_adapter: 3.1.6 (/opt/ros/humble/share/rosidl_adapter/cmake)
[0.408s] -- Found rosidl_generator_cpp: 3.1.6 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
[0.432s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[0.460s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[0.529s] -- Found rmw_implementation_cmake: 6.1.2 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
[0.531s] -- Found rmw_fastrtps_cpp: 6.2.7 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
[0.653s] -- Using RMW implementation 'rmw_fastrtps_cpp' as default
[0.765s] -- Found nav_msgs: 4.2.4 (/opt/ros/humble/share/nav_msgs/cmake)
[0.812s] -- Found sensor_msgs: 4.2.4 (/opt/ros/humble/share/sensor_msgs/cmake)
[0.841s] -- Found tf2_ros: 0.25.12 (/opt/ros/humble/share/tf2_ros/cmake)
[1.080s] -- Found ament_lint_auto: 0.12.11 (/opt/ros/humble/share/ament_lint_auto/cmake)
[1.152s] -- Added test 'cppcheck' to perform static code analysis on C / C++ code
[1.152s] -- Configured cppcheck include dirs: /home/louwee/correct_ws/src/correct_mapping/include
[1.152s] -- Configured cppcheck exclude dirs and/or files: 
[1.153s] -- Added test 'flake8' to check Python code syntax and style conventions
[1.154s] -- Added test 'lint_cmake' to check CMake code style
[1.154s] -- Added test 'pep257' to check Python code against some of the docstring style conventions in PEP 257
[1.155s] -- Added test 'uncrustify' to check C / C++ code style
[1.155s] -- Configured uncrustify additional arguments: 
[1.156s] -- Added test 'xmllint' to check XML markup files
[1.156s] -- Configuring done
[1.171s] -- Generating done
[1.176s] -- Build files have been written to: /home/louwee/correct_ws/build/correct_mapping
[1.213s] [ 50%] [32mBuilding CXX object CMakeFiles/mapping_with_known_poses.dir/src/mapping_with_known_poses.cpp.o[0m
[1.226s] [ 50%] Built target ament_cmake_python_copy_correct_mapping
[1.554s] running egg_info
[1.555s] writing correct_mapping.egg-info/PKG-INFO
[1.555s] writing dependency_links to correct_mapping.egg-info/dependency_links.txt
[1.555s] writing top-level names to correct_mapping.egg-info/top_level.txt
[1.557s] reading manifest file 'correct_mapping.egg-info/SOURCES.txt'
[1.558s] writing manifest file 'correct_mapping.egg-info/SOURCES.txt'
[1.599s] [ 50%] Built target ament_cmake_python_build_correct_mapping_egg
[3.812s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[3.812s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[3.812s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
[3.812s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[3.812s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[3.813s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[3.813s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/include/correct_mapping/mapping_with_known_poses.hpp:4[m[K,
[3.813s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:1[m[K:
[3.813s] /usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (correct_mapping::MappingWithKnownPoses::*)()>[m[Kâ€™:
[3.813s] [01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (correct_mapping::MappingWithKnownPoses::*)()>[m[Kâ€™
[3.813s] [01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (correct_mapping::MappingWithKnownPoses::*)(); _BoundArgs = {}][m[Kâ€™
[3.813s] [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:43:65:[m[K   required from here
[3.813s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
[3.813s]   755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
[3.813s]       |                               [01;31m[K~~~~~[m[K
[3.813s]   756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
[3.813s]       |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.813s]   757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
[3.813s]       |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.813s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (0 >= (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)) : (0 == (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)))[m[Kâ€™ evaluates to false
[3.813s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (correct_mapping::MappingWithKnownPoses::*)(); _CallArgs = _CallArgs; _BArgs = {}; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™:
[3.813s] [01m[K/usr/include/c++/11/functional:468:8:[m[K   required from â€˜[01m[Kclass std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>[m[Kâ€™
[3.814s] [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:43:65:[m[K   required from here
[3.814s] [01m[K/usr/include/c++/11/functional:464:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (correct_mapping::MappingWithKnownPoses::*&())()>[m[Kâ€™
[3.814s]   464 |         using [01;31m[K_Res_type_impl[m[K
[3.814s]       |               [01;31m[K^~~~~~~~~~~~~~[m[K
[3.814s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (correct_mapping::MappingWithKnownPoses::*)(); _CallArgs = std::tuple<_Tps ...>; _BArgs = {}; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™:
[3.814s] [01m[K/usr/include/c++/11/functional:468:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<_Tps ...>; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[3.814s] [01m[K/usr/include/c++/11/functional:501:2:[m[K   required from â€˜[01m[Kclass std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>[m[Kâ€™
[3.814s] [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:43:65:[m[K   required from here
[3.814s] [01m[K/usr/include/c++/11/functional:464:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (correct_mapping::MappingWithKnownPoses::*&())()>[m[Kâ€™
[4.468s] In file included from [01m[K/usr/include/x86_64-linux-gnu/c++/11/bits/c++allocator.h:33[m[K,
[4.468s]                  from [01m[K/usr/include/c++/11/bits/allocator.h:46[m[K,
[4.468s]                  from [01m[K/usr/include/c++/11/memory:64[m[K,
[4.468s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
[4.468s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/include/correct_mapping/mapping_with_known_poses.hpp:4[m[K,
[4.468s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:1[m[K:
[4.468s] /usr/include/c++/11/ext/new_allocator.h: In instantiation of â€˜[01m[Kvoid __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = correct_mapping::MappingWithKnownPoses; _Args = {}; _Tp = correct_mapping::MappingWithKnownPoses][m[Kâ€™:
[4.468s] [01m[K/usr/include/c++/11/bits/alloc_traits.h:516:17:[m[K   required from â€˜[01m[Kstatic void std::allocator_traits<std::allocator<_Tp1> >::construct(std::allocator_traits<std::allocator<_Tp1> >::allocator_type&, _Up*, _Args&& ...) [with _Up = correct_mapping::MappingWithKnownPoses; _Args = {}; _Tp = correct_mapping::MappingWithKnownPoses; std::allocator_traits<std::allocator<_Tp1> >::allocator_type = std::allocator<correct_mapping::MappingWithKnownPoses>][m[Kâ€™
[4.469s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:519:39:[m[K   required from â€˜[01m[Kstd::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {}; _Tp = correct_mapping::MappingWithKnownPoses; _Alloc = std::allocator<correct_mapping::MappingWithKnownPoses>; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[4.469s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:650:16:[m[K   required from â€˜[01m[Kstd::__shared_count<_Lp>::__shared_count(_Tp*&, std::_Sp_alloc_shared_tag<_Alloc>, _Args&& ...) [with _Tp = correct_mapping::MappingWithKnownPoses; _Alloc = std::allocator<correct_mapping::MappingWithKnownPoses>; _Args = {}; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[4.469s] [01m[K/usr/include/c++/11/bits/shared_ptr_base.h:1342:14:[m[K   required from â€˜[01m[Kstd::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<correct_mapping::MappingWithKnownPoses>; _Args = {}; _Tp = correct_mapping::MappingWithKnownPoses; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic][m[Kâ€™
[4.469s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:409:59:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp>::shared_ptr(std::_Sp_alloc_shared_tag<_Tp>, _Args&& ...) [with _Alloc = std::allocator<correct_mapping::MappingWithKnownPoses>; _Args = {}; _Tp = correct_mapping::MappingWithKnownPoses][m[Kâ€™
[4.469s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:862:14:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = correct_mapping::MappingWithKnownPoses; _Alloc = std::allocator<correct_mapping::MappingWithKnownPoses>; _Args = {}][m[Kâ€™
[4.469s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:878:39:[m[K   required from â€˜[01m[Kstd::shared_ptr<_Tp> std::make_shared(_Args&& ...) [with _Tp = correct_mapping::MappingWithKnownPoses; _Args = {}][m[Kâ€™
[4.469s] [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:84:73:[m[K   required from here
[4.469s] [01m[K/usr/include/c++/11/ext/new_allocator.h:162:11:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kcorrect_mapping::MappingWithKnownPoses::MappingWithKnownPoses()[m[Kâ€™
[4.469s]   162 |         { [01;31m[K::new((void *)__p) _Up(std::forward<_Args>(__args)...)[m[K; }
[4.469s]       |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[4.469s] [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:25:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kcorrect_mapping::MappingWithKnownPoses::MappingWithKnownPoses(const string&)[m[Kâ€™
[4.469s]    25 | [01;36m[KMappingWithKnownPoses[m[K::MappingWithKnownPoses(const std::string &name) : Node(name)
[4.469s]       | [01;36m[K^~~~~~~~~~~~~~~~~~~~~[m[K
[4.469s] [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:25:1:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 0 provided
[5.412s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:30[m[K,
[5.412s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.412s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.413s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/include/correct_mapping/mapping_with_known_poses.hpp:4[m[K,
[5.413s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:1[m[K:
[5.413s] /opt/ros/humble/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.413s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.413s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:[m[K   required from here
[5.413s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:244:14:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>) ()[m[Kâ€™
[5.413s]   244 |     [01;31m[Kcallback_()[m[K;
[5.413s]       |     [01;31m[K~~~~~~~~~^~[m[K
[5.413s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[5.413s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.413s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.414s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.414s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/include/correct_mapping/mapping_with_known_poses.hpp:4[m[K,
[5.414s]                  from [01m[K/home/louwee/correct_ws/src/correct_mapping/src/mapping_with_known_poses.cpp:1[m[K:
[5.414s] [01m[K/usr/include/c++/11/functional:501:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) [with _Args = {_Args ...}; _Result = _Result; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.414s]   501 |         [01;36m[Koperator[m[K()(_Args&&... __args)
[5.414s]       |         [01;36m[K^~~~~~~~[m[K
[5.414s] [01m[K/usr/include/c++/11/functional:501:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.414s] [01m[K/usr/include/c++/11/functional:513:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const [with _Args = {_Args ...}; _Result = _Result; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.414s]   513 |         [01;36m[Koperator[m[K()(_Args&&... __args) const
[5.414s]       |         [01;36m[K^~~~~~~~[m[K
[5.414s] [01m[K/usr/include/c++/11/functional:513:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.414s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (correct_mapping::MappingWithKnownPoses::* const)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™:
[5.414s] [01m[K/usr/include/c++/11/functional:475:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_const; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.414s] [01m[K/usr/include/c++/11/functional:510:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.414s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.414s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:[m[K   required from here
[5.414s] [01m[K/usr/include/c++/11/functional:464:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (correct_mapping::MappingWithKnownPoses::* const&())()>[m[Kâ€™
[5.414s]   464 |         using [01;31m[K_Res_type_impl[m[K
[5.414s]       |               [01;31m[K^~~~~~~~~~~~~~[m[K
[5.414s] /opt/ros/humble/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.415s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.415s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:[m[K   required from here
[5.415s] [01m[K/usr/include/c++/11/functional:531:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.415s]   531 |         [01;36m[Koperator[m[K()(_Args&&... __args) volatile
[5.415s]       |         [01;36m[K^~~~~~~~[m[K
[5.415s] [01m[K/usr/include/c++/11/functional:531:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.415s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (correct_mapping::MappingWithKnownPoses::* volatile)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™:
[5.415s] [01m[K/usr/include/c++/11/functional:475:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_volatile; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.415s] [01m[K/usr/include/c++/11/functional:528:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.415s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.415s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:[m[K   required from here
[5.415s] [01m[K/usr/include/c++/11/functional:464:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (correct_mapping::MappingWithKnownPoses::* volatile&())()>[m[Kâ€™
[5.415s]   464 |         using [01;31m[K_Res_type_impl[m[K
[5.415s]       |               [01;31m[K^~~~~~~~~~~~~~[m[K
[5.415s] /opt/ros/humble/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™:
[5.415s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.415s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:[m[K   required from here
[5.415s] [01m[K/usr/include/c++/11/functional:543:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::operator()(_Args&& ...) const volatile [with _Args = {_Args ...}; _Result = _Result; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.415s]   543 |         [01;36m[Koperator[m[K()(_Args&&... __args) const volatile
[5.415s]       |         [01;36m[K^~~~~~~~[m[K
[5.415s] [01m[K/usr/include/c++/11/functional:543:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.416s] /usr/include/c++/11/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [with _Fn = void (correct_mapping::MappingWithKnownPoses::* const volatile)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™:
[5.416s] [01m[K/usr/include/c++/11/functional:475:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using _Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [with _CallArgs = std::tuple<>; __cv_quals = std::add_cv; _Functor = void (correct_mapping::MappingWithKnownPoses::*)(); _Bound_args = {}][m[Kâ€™
[5.416s] [01m[K/usr/include/c++/11/functional:540:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback_delegate() [with CallbackT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.416s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:230:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::execute_callback() [with FunctorT = std::_Bind<void (correct_mapping::MappingWithKnownPoses::*())()>; typename std::enable_if<(rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value)>::type* <anonymous> = 0][m[Kâ€™
[5.416s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/timer.hpp:227:3:[m[K   required from here
[5.416s] [01m[K/usr/include/c++/11/functional:464:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (correct_mapping::MappingWithKnownPoses::* const volatile&())()>[m[Kâ€™
[5.416s]   464 |         using [01;31m[K_Res_type_impl[m[K
[5.416s]       |               [01;31m[K^~~~~~~~~~~~~~[m[K
[5.937s] gmake[2]: *** [CMakeFiles/mapping_with_known_poses.dir/build.make:76: CMakeFiles/mapping_with_known_poses.dir/src/mapping_with_known_poses.cpp.o] Error 1
[5.937s] gmake[1]: *** [CMakeFiles/Makefile2:140: CMakeFiles/mapping_with_known_poses.dir/all] Error 2
[5.937s] gmake: *** [Makefile:146: all] Error 2
[5.939s] Invoked command in '/home/louwee/correct_ws/build/correct_mapping' returned '2': CMAKE_PREFIX_PATH=/opt/ros/humble /usr/bin/cmake --build /home/louwee/correct_ws/build/correct_mapping -- -j12 -l12
